syntax = "proto3";

package creation;

option go_package = "github.com/Yux77Yux/platform_backend/generated/creation";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "creation/methods/post.proto";
import "creation/methods/update.proto";
import "creation/methods/get.proto";
import "creation/methods/delete.proto";

service CreationService {
  // POST
  rpc UploadCreation(creation.methods.UploadCreationRequest) returns (creation.methods.UploadCreationResponse) {
    option (google.api.http) = {
      post: "/api/creation"
      body: "*"
    };
  }

  // GET
  rpc GetCreation(creation.methods.GetCreationRequest) returns (creation.methods.GetCreationResponse);
  rpc GetCreationPrivate(creation.methods.GetCreationPrivateRequest) returns (creation.methods.GetCreationResponse) {
    option (google.api.http) = {
      post: "/api/creation/private"
      body: "*"
    };
  }

  rpc GetSpaceCreations(creation.methods.GetSpaceCreationsRequest) returns (creation.methods.GetCreationListResponse) {
    option (google.api.http) = {
      get: "/api/creation/space/{user_id}/{page}/{by_what}"
    };
  }

  rpc GetUserCreations(creation.methods.GetUserCreationsRequest) returns (creation.methods.GetCreationListResponse) {
    option (google.api.http) = {
      post: "/api/manager/creations"
    };
  }

  rpc SearchCreation(creation.methods.SearchCreationRequest) returns (creation.methods.GetCreationListResponse);
  rpc GetCreationList(creation.methods.GetCreationListRequest) returns (creation.methods.GetCreationListResponse);
  rpc GetPublicCreationList(creation.methods.GetCreationListRequest) returns (creation.methods.GetCreationListResponse);

  // DELETE
  rpc DeleteCreation(creation.methods.DeleteCreationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/creation/delete"
      body: "*"
    };
  }

  // UPDATE
  rpc UpdateCreation(creation.methods.UpdateCreationRequest) returns (creation.methods.UpdateCreationResponse) {
    option (google.api.http) = {
      patch: "/api/creation"
      body: "*"
    };
  }

  rpc PublishDraftCreation(creation.methods.UpdateCreationStatusRequest) returns (creation.methods.UpdateCreationResponse) {
    option (google.api.http) = {
      patch: "/api/creation/status"
      body: "*"
    };
  }
}