syntax = "proto3";

package aggregator;

option go_package = "github.com/Yux77Yux/platform_backend/generated/aggregator";

import "google/api/annotations.proto";

import "aggregator/methods/get.proto";
import "aggregator/methods/review.proto";
import "aggregator/methods/login.proto";
import "aggregator/methods/watch.proto";

service AggregatorService {
  rpc Search(aggregator.methods.SearchCreationsRequest) returns (aggregator.methods.SearchCreationsResponse) {
    option (google.api.http) = {
      get: "/api/search/videos/{title}/{page}"
    };
  }

  // User OK
  rpc Login(aggregator.methods.LoginRequest) returns (aggregator.methods.LoginResponse) {
    option (google.api.http) = {
      post: "/api/user/login"
      body: "user_credentials"
    };
  }

  //  WatchCreation OK
  rpc WatchCreation(aggregator.methods.WatchCreationRequest) returns (aggregator.methods.WatchCreationResponse) {
    option (google.api.http) = {
      get: "/api/watch/{creation_id}"
    };
  }

  // 相似视频 OK
  rpc SimilarCreations(aggregator.methods.SimilarCreationsRequest) returns (aggregator.methods.GetCardsResponse) {
    option (google.api.http) = {
      get: "/api/watch/similar/{creation_id}"
    };
  }

  // Comment OK
  rpc InitialComments(aggregator.methods.InitialCommentsRequest) returns (aggregator.methods.InitialCommentsResponse) {
    option (google.api.http) = {
      get: "/api/watch/comments/{request.creation_id}"
    };
  }

  rpc GetTopComments(aggregator.methods.GetTopCommentsRequest) returns (aggregator.methods.GetTopCommentsResponse) {
    option (google.api.http) = {
      get: "/api/watch/comments/{request.creation_id=*}/{request.page=*}"
    };
  }

  rpc GetSecondComments(aggregator.methods.GetSecondCommentsRequest) returns (aggregator.methods.GetSecondCommentsResponse) {
    option (google.api.http) = {
      get: "/api/watch/comments/second/{request.creation_id=*}/{request.root=*}/{request.page=*}"
    };
  }

  // Review
  rpc GetUserReviews(aggregator.methods.GetReviewsRequest) returns (aggregator.methods.GetUserReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/user"
      body: "*"
    };
  }

  rpc GetCreationReviews(aggregator.methods.GetReviewsRequest) returns (aggregator.methods.GetCreationReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/creation"
      body: "*"
    };
  }

  rpc GetCommentReviews(aggregator.methods.GetReviewsRequest) returns (aggregator.methods.GetCommentReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/comment"
      body: "*"
    };
  }

  rpc GetNewUserReviews(aggregator.methods.GetNewReviewsRequest) returns (aggregator.methods.GetUserReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/new/user"
      body: "*"
    };
  }

  rpc GetNewCreationReviews(aggregator.methods.GetNewReviewsRequest) returns (aggregator.methods.GetCreationReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/new/creation"
      body: "*"
    };
  }

  rpc GetNewCommentReviews(aggregator.methods.GetNewReviewsRequest) returns (aggregator.methods.GetCommentReviewsResponse) {
    option (google.api.http) = {
      post: "/api/review/query/new/comment"
      body: "*"
    };
  }

  // 主页
  rpc HomePage(aggregator.methods.HomeRequest) returns (aggregator.methods.GetCardsResponse) {
    option (google.api.http) = {
      post: "/api/home/fetch"
      body: "*"
    };
  }

  // 收藏夹
  rpc Collections(aggregator.methods.CollectionsRequest) returns (aggregator.methods.GetCardsResponse) {
    option (google.api.http) = {
      post: "/api/collections/fetch"
      body: "*"
    };
  }

  // 历史
  rpc History(aggregator.methods.HistoryRequest) returns (aggregator.methods.GetCardsResponse) {
    option (google.api.http) = {
      post: "/api/history/fetch"
      body: "*"
    };
  }
}