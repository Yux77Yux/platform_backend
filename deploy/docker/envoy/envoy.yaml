admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
    - name: yux_listen # 监听器名称
      address:
        socket_address:
          address: 0.0.0.0 # 监听所有 IP
          port_value: 8080 # 客户端请求的 REST 端口
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                http_filters:
                  # - name: envoy.filters.http.ext_authz
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  #     grpc_service:
                  #       envoy_grpc:
                  #         cluster_name: auth_service
                  #     failure_mode_allow: false
                  - name: envoy.filters.http.grpc_web  # 添加 gRPC-Web 过滤器，支持 gRPC-Web Streaming
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.grpc_json_transcoder # 转换过滤器
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/etc/envoy/descriptor.pb" # gRPC 描述文件路径
                      services:
                        - "auth.AuthService"
                        - "user.UserService"
                        - "interaction.InteractionService"
                        - "comment.CommentService"
                        - "review.ReviewService"
                        - "creation.CreationService"
                        - "aggregator.AggregatorService"
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router # 路由过滤器
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

                route_config:
                  virtual_hosts:
                    - name: all_service
                      domains: ["*"] # 匹配所有域名
                      typed_per_filter_config:
                        envoy.filters.http.cors:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                          allow_origin_string_match:
                            - safe_regex:
                                regex: \*
                          allow_methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
                          allow_headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Access-Control-Allow-Origin,Cookie,x-forwarded-for,TraceId"
                          allow_credentials: true
                          max_age: "1728000"
                      routes:
                        - match:
                            path: "/http/creation"
                          route:
                            cluster: creation_http_service
                        # 这个prefix: "/api"就是应付所有的OPTIONS请求，cluster随便填
                        - match:
                            prefix: "/api"
                          route:
                            cluster: user_service
                        - match:
                            prefix: "/user.UserService"
                          route:
                            cluster: user_service # 指定 gRPC user 集群
                        - match:
                            prefix: "/aggregator.AggregatorService" # 登录 路径
                          route:
                            cluster: aggregator_service # 指定 gRPC aggregator 集群
                          request_headers_to_add:
                            - header:
                                key: "x-forwarded-for"
                                value: "%REQ(x-forwarded-for)%"
                        - match:
                            prefix: "/creation.CreationService" # 登录 路径
                          route:
                            cluster: creation_service # 指定 gRPC aggregator 集群
                          # typed_per_filter_config:
                          #   envoy.filters.http.ext_authz:
                          #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          #     disabled: true # 禁用外部授权
                        - match:
                            prefix: "/auth.AuthService" # grpc 授权 路径
                          route:
                            cluster: auth_service # 指定 gRPC auth 集群
                        - match:
                            prefix: "/comment.CommentService" # grpc 授权 路径
                          route:
                            cluster: comment_service # 指定 gRPC creation 集群
                        - match:
                            prefix: "/interaction.InteractionService" # grpc 授权 路径
                          route:
                            cluster: interaction_service # 指定 gRPC interaction 集群
                        - match:
                            prefix: "/review.ReviewService" # grpc 授权 路径
                          route:
                            cluster: review_service # 指定 gRPC review 集群
                          request_headers_to_add:
                            - header:
                                key: "x-forwarded-for"
                                value: "%REQ(x-forwarded-for)%"
  clusters:
    # 当需要组装多个服务返回的响应，会使用aggregator（聚合层）
    - name: aggregator_service # gRPC 聚合层 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: aggregator_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50000
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: user_service # gRPC user 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: user_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50060
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: auth_service # gRPC auth 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: auth_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 51000
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: creation_service # gRPC creation 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: creation_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50030
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: creation_http_service # HTTP creation 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http_protocol_options: {}
      load_assignment:
        cluster_name: creation_http_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50031
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节
    
    - name: comment_service # gRPC comment 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: comment_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50020
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: interaction_service # gRPC interaction 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: interaction_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50040
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节

    - name: review_service # gRPC review 服务集群
      connect_timeout: 5s
      lb_policy: ROUND_ROBIN
      type: LOGICAL_DNS
      http2_protocol_options: # 对于 HTTP/2 配置
        initial_connection_window_size: 1048576 # 初始连接窗口大小
        initial_stream_window_size: 1048576 # 初始流窗口大小
        max_concurrent_streams: 1000
      load_assignment:
        cluster_name: review_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.28.96.1
                      port_value: 50050
      circuit_breakers:
        thresholds:
          - priority: default
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      per_connection_buffer_limit_bytes: 32768 # 每个连接的缓冲区限制，单位字节